{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,CC8BA,GAAI,A,C,E,Q,EAAA,IAAG,CAAE,cA3BT,SAAgB,CAAM,EAIpB,EAAG,KAAK,CAAG,KACT,EAAG,YAAY,CAJP,IACA,KAIR,EAAG,SAAS,CAAC,EAAG,GAAG,CACrB,EAEA,EAAG,IAAI,CAAG,KACR,EAAG,UAAU,CAAC,KAId,IACM,EAAY,AAdV,IAYK,GAIb,IAAK,IAAI,EAAI,EAAG,EAJH,GAIa,IACxB,IAAK,IAAI,EAAI,EAAG,EANL,GAMe,IAAK,CAC7B,IAAM,EAAM,AALG,GAKH,EACN,EAAO,EAAI,EACjB,EAAG,IAAI,CAAC,IAAO,EARN,GAQiB,GAAK,IAAM,EAT5B,IAUT,EAAG,IAAI,CAAC,EAAM,EAAK,EARJ,GASjB,CAEJ,CACF","sources":["<anon>","src/sketches/p0/color/index.ts"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire4f74\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire4f74\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $7vzAp = parcelRequire(\"7vzAp\");\nfunction $c84770fca1a159e4$var$sketch(p5) {\n    const w = 800;\n    const h = 600;\n    p5.setup = ()=>{\n        p5.createCanvas(w, h);\n        p5.colorMode(p5.HSL);\n    };\n    p5.draw = ()=>{\n        p5.background(128);\n        const rows = 15;\n        const cols = 15;\n        const row_height = h / rows;\n        const col_width = w / cols;\n        for(let i = 0; i < cols; i++)for(let j = 0; j < rows; j++){\n            const top = j * row_height;\n            const left = i * col_width;\n            p5.fill(360 * i / cols, 45, 100 * j / rows);\n            p5.rect(left, top, col_width, row_height);\n        }\n    };\n}\nnew (0, $7vzAp.Page)(\"Hello Color\", $c84770fca1a159e4$var$sketch);\n\n\n//# sourceMappingURL=index.1b75e2e2.js.map\n","import { Page } from \"~/src/lib/page\";\nimport P5 from \"p5\";\n\nfunction sketch(p5: P5) {\n  const w = 800;\n  const h = 600;\n\n  p5.setup = () => {\n    p5.createCanvas(w, h);\n    p5.colorMode(p5.HSL);\n  };\n\n  p5.draw = () => {\n    p5.background(128);\n\n    const rows = 15;\n    const cols = 15;\n    const row_height = h / rows;\n    const col_width = w / cols;\n\n    for (let i = 0; i < cols; i++) {\n      for (let j = 0; j < rows; j++) {\n        const top = j * row_height;\n        const left = i * col_width;\n        p5.fill((360 * i) / cols, 45, (100 * j) / rows);\n        p5.rect(left, top, col_width, row_height);\n      }\n    }\n  };\n}\nnew Page(\"Hello Color\", sketch);\n\nexport {};\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$7vzAp","Page","p5","setup","createCanvas","colorMode","HSL","draw","background","col_width","w","i","j","top","h","left","fill","rect"],"version":3,"file":"index.1b75e2e2.js.map"}